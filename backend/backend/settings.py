"""
Django settings for room_checklist project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import environ
from corsheaders.defaults import default_headers

ROOT_DIR = environ.Path(__file__) - 1  # This will put us at the base directory of the project
APPS_DIR = ROOT_DIR.path('backend')

# LOAD SETTINGS FROM .env FILE IN ROOT DIRECTORY
env = environ.Env()
try:
    env_file = str(ROOT_DIR.path('development.env'))
    print('Loading : {}'.format(env_file))
    env.read_env(env_file)
    print('The .env file has been loaded. See settings.py for more information')
except:
    print('Failed to load .env file. Please check permissions.')
    exit(1)


SECRET_KEY = env('SECRET_KEY')

DEBUG = env.bool('DJANGO_DEBUG', False)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

SESSION_COOKIE_SECURE = False

# Application definition
DJANGO_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

THIRD_PARTY_APPS = (
    'rest_framework',
    'knox',
)

LOCAL_APPS = (
    'backend.api',
    'accounts',
)

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',)
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# DATABASES = {
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.mysql',
#     #     'NAME': env('RDS_DB_NAME'),
#     #     'USER': env('RDS_USERNAME'),
#     #     'PASSWORD': env('RDS_PASSWORD'),
#     #     'HOST': env('RDS_HOSTNAME'),
#     #     'PORT': env('RDS_PORT'),
#     # }
#     'default': env.db(),  # pull database configuration from the environment config file
#     # read os.environ['SQLITE_URL']
#     # 'extra': env.db('SQLITE_URL', default='sqlite:////tmp/my-tmp-sqlite.db')
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'medfieldAthletics',
        'USER': 'gordon',
        'PASSWORD': 'c18IT416!',
        'HOST': '/Applications/XAMPP/xamppfiles/var/mysql/mysql.sock',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Logging setup
# https://docs.djangoproject.com/en/2.1/topics/logging/
# DEBUG_LOGGING_PATH = str(ROOT_DIR) + "/" + env("LOG_FILE")
# INFO_LOGGING_PATH = str(ROOT_DIR) + "/" + env("LOG_FILE")
# DEBUG_LOGGING_PATH = str(ROOT_DIR) + "/log/" + "debug.log"
INFO_LOGGING_PATH = str(ROOT_DIR) + "/log/" + "info.log"
# print("DEBUG log: " + DEBUG_LOGGING_PATH)
print("INFO log: " + INFO_LOGGING_PATH)
LOGGING = {
    'version': 1,
    # 'disable_existing_loggers': True,
    'handlers': {
        # 'debug_handler': {
        #     'level': 'DEBUG',
        #     'class': 'logging.FileHandler',
        #     'filename': DEBUG_LOGGING_PATH,
        # },
        'info_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': INFO_LOGGING_PATH,
        },
    },
    'loggers': {
        # 'django': {
        #     'handlers': ['debug_handler'],
        #     'level': 'DEBUG',
        #     'propagate': True,
        # },
        'logger': {
            'handlers': ['info_handler'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_TZ = True

USE_I18N = True
USE_L10N = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = str(ROOT_DIR('staticfiles'))
STATICFILES_DIRS = (
    str(APPS_DIR.path('static')),
)
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

print(str(STATIC_URL) + ' ' + str(STATIC_ROOT) + ' ' + str(STATICFILES_DIRS))
MEDIA_URL = '/media/'
MEDIA_ROOT = str(APPS_DIR('media'))

## REST FRAMEWORK SETTINGS
# REST_FRAMEWORK = {
#     'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
#     # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     # 'PAGE_SIZE': 10,
# }

# CORS SETTINGS!!!!
CORS_ORIGIN_ALLOW_ALL = True
# CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = (
#     'localhost:8000',
#     'localhost:3000',
#     '127.0.0.1:3000'
#     '10.1.10.2:3000'
# )
# CORS_ALLOW_HEADERS = default_headers + (
#     'Access-Control-Allow-Origin',
# )

